CREATE TABLE TB_EMPRESA(
ID INT,
NOME VARCHAR(50)
)
GO

/* CONECTANDO A UM BANCO */

USE EMPRESA
GO

/* CRIACAO DE TABELAS */


CREATE TABLE ALUNO(
	IDALUNO INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30) NOT NULL,
	SEXO CHAR(1) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	EMAIL VARCHAR(30) UNIQUE
)
GO

/* CONSTRAINTS */

ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK (SEXO IN ('M','F'))
GO

/* 1 X 1 */

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY IDENTITY(100,10),
	BAIRRO VARCHAR(30),
	UF CHAR(2) NOT NULL,
	CHECK (UF IN('RJ', 'SP', 'MG')),
	ID_ALUNO INT UNIQUE
)
GO

/* CRIANDO A FK */

ALTER TABLE ENDERECO
ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY(ID_ALUNO)
REFERENCES ALUNO(IDALUNO)
GO

/* COMANDOS DE DESCRICAO */

/* PROCEDURES JÁ CRIADAS E ARMAZENADAS NO SISTEMA */

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

/* INSERINDO DADOS */

INSERT INTO ALUNO VALUES('ANDRE','M','1982/08/09','ANDRE@IG.COM')
INSERT INTO ALUNO VALUES('ANA','F','2004/06/30','ANA@IG.COM')
INSERT INTO ALUNO VALUES('RUI','M','1972/05/26','RUI@IG.COM')
INSERT INTO ALUNO VALUES('JOHN JONES','M','1986/4/10','JOHNJONES@IG.COM')
GO

SELECT * FROM ALUNO
GO
/* INSERTS PARA ENDERECO */


INSERT INTO ENDERECO VALUES('FLAMENGO', 'RJ', 1)
INSERT INTO ENDERECO VALUES('CENTRO', 'SP', 2)
INSERT INTO ENDERECO VALUES('MORUMBI', 'SP', 3)
INSERT INTO ENDERECO VALUES('CENTRO', 'MG', 4)
GO
/* CRIANDO TABELA TELEFONE */
CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY IDENTITY,
	TIPO CHAR(3) NOT NULL,
	CHECK (TIPO IN('RES','COM', 'CEL')),
	NUMERO VARCHAR(10),
	ID_ALUNO INT,
)
GO

INSERT INTO TELEFONE VALUES('CEL', '7899899', 2)
INSERT INTO TELEFONE VALUES('RES', '684563', 2)
INSERT INTO TELEFONE VALUES('COM', '4564786', 3)
INSERT INTO TELEFONE VALUES('CEL', '8696954', 3)
GO

/* PEGAR DATA ATUAL */

SELECT GETDATE()
GO

/* CLAUSULA AMBIGUA */

SELECT A.NOME,
	   ISNULL(T.TIPO, 'SEM') AS "TIPO",
	   ISNULL(T.NUMERO,'NUMERO') AS "TELEFONE",
	   E.BAIRRO,
	   E.UF
FROM ALUNO A
	LEFT JOIN TELEFONE T
	ON A.IDALUNO = T.ID_ALUNO
	INNER JOIN ENDERECO E
	ON A.IDALUNO = E.ID_ALUNO
GO

/* DATAS */

SELECT NOME, NASCIMENTO
FROM ALUNO
GO


/* FUNCAO GETDATE() TRAZ DIA E HORA */

SELECT NOME, GETDATE() AS DIA_HORA FROM ALUNO
GO

/* DATADIFF - CALCULA A DIFERENÇA ENTRE 2 DATAS */
SELECT NOME, DATEDIFF(DAY, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO 
GO  

SELECT NOME, DATEDIFF(MONTH, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO 
GO  

SELECT NOME, DATEDIFF(YEAR, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO 
GO  

/* DATENAME - TRAZ O NOME DA PARTE DA DATA EM QUESTAO */
SELECT NOME, DATENAME(MONTH, NASCIMENTO)
FROM ALUNO
GO

SELECT NOME, DATENAME(YEAR, NASCIMENTO)
FROM ALUNO
GO

SELECT NOME, DATENAME(WEEKDAY, NASCIMENTO)
FROM ALUNO
GO

/* DATEPART - POREM O RETORNO É UM INTEIRO */

SELECT NOME, DATEPART(MONTH, NASCIMENTO)
FROM ALUNO
GO

/* DATEADD - RETORNA UMA DATA SOMANDO A OUTRA DATA*/

SELECT DATEADD(YEAR, 20, GETDATE());
GO